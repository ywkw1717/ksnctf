Village A へ向けて

・フォーマットストリングアタック
・GOT　overwrite

フォーマットストリングアタックとは
バッファスタックオーバーフローに並んでよく知られている攻撃
format string attack(書式文字列攻撃)
printf系関数のフォーマット文字列が外部から操作可能になっている場合に、細工した文字列を送り込んでメモリ内容の読み出しや書き換えを行う攻撃

コマンドライン引数がそのままprintfのフォーマット文字列になっているコードを書く
事前にヒープ領域に適当なファイルを読み込んでおき、メモリ読み出しのターゲットとする.
ここではついでに読み込んだバイト長も出力することにする

２０００バイトの領域を確保して、その始めの位置を表示
そのあと、適当なファイルを読み込み、読み込んだバイト長を表示
その後、コマンドライン引数をbufにcpして、表示するプログラム

DEP,SSP無効, ASLR無効でコンパイル：実行してみる

普通に実行すれば, secret変数に読み込んだ１０３７バイトのデータは表示されるわけはない

[スタックの中身を出力させてみる]
printf系関数が呼び出されるとき, その第一引数となるフォーマット文字列のアドレスはスタックの一番上に置かれている. 
フォーマット文字列に'%08x'を送り込んで見ると、本来第２引数があるはずのスタック上位から２ワード目を出力させることができる

上のコードのフォーマット文字列bufはスタック上に置かれているので, ３ワード目以降も同様に出力させればそのうちフォーマット文字列そのものの値が出力されるはず. 実際にフォーマット文字列の先頭に目印を置いて, 順にスタックの中身を表示させてみる.

第一引数のAAAAに対応する41414141が10番目に現れた.
./a.out 'AAAA%10$08x'で10番目の値を直接表示させることができる

%s指定子は対応する引数で指定されたアドレスが指す文字列を出力する. つまり, AAAAの部分に読み出したいアドレスをセットした上で%10$sを指定すれば, 任意のアドレスからnullバイトが現れるまでのメモリ内容を出力させることができる.

エクスプロイトコードを書いてみる



